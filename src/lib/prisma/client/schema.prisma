// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/lib/prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = "file:../fafi.db"
}

model users {
  id            String   @id @default(uuid())
  email         String   @unique
  password      String
  name          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  monobankToken String?

  // Relations
  accounts     accounts[]
  transactions transactions[]
  categories   categories[]
  budgets      budgets[]
}

model accounts {
  id        String      @id @default(uuid())
  name      String
  type      AccountType
  balance   Decimal
  currency  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  // Relations
  user                    users          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                  String
  sourceTransactions      transactions[] @relation("SourceAccount")
  destinationTransactions transactions[] @relation("DestinationAccount")
}

model transactions {
  id                String          @id @default(uuid())
  sourceAmount      Decimal
  destinationAmount Decimal
  description       String
  date              DateTime
  type              TransactionType
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  // Relations
  sourceAccount        accounts?   @relation("SourceAccount", fields: [sourceAccountId], references: [id])
  sourceAccountId      String?
  destinationAccount   accounts?   @relation("DestinationAccount", fields: [destinationAccountId], references: [id])
  destinationAccountId String?
  category             categories? @relation(fields: [categoryId], references: [id])
  categoryId           String?
  user                 users       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId               String
}

model categories {
  id        String       @id @default(uuid())
  name      String
  type      CategoryType
  bgColor   String
  fgColor   String
  icon      String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  // Relations
  user         users          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  transactions transactions[]
  budgets      budgets[]
}

model budgets {
  id            String       @id @default(uuid())
  name          String
  plannedAmount Decimal
  actualAmount  Decimal
  period        BudgetPeriod
  startDate     DateTime
  endDate       DateTime
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  // Relations
  category   categories @relation(fields: [categoryId], references: [id])
  categoryId String
  user       users      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
}

enum AccountType {
  CHECKING
  SAVINGS
  CREDIT
  INVESTMENT
  CASH
}

enum TransactionType {
  INCOME
  EXPENSE
  TRANSFER
}

enum CategoryType {
  INCOME
  EXPENSE
}

enum BudgetPeriod {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}
