// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(cuid())
  email          String          @unique
  name           String?
  password       String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  accounts       Account[]
  transactions   Transaction[]
  categories     Category[]
  budgets        Budget[]
}

model Account {
  id             String          @id @default(cuid())
  name           String
  type           AccountType
  balance        Decimal         @default(0)
  currency       String          @default("USD")
  userId         String
  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  transactions   Transaction[]
}

model Transaction {
  id             String          @id @default(cuid())
  amount         Decimal
  date           DateTime
  description    String
  type           TransactionType
  userId         String
  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  accountId      String
  account        Account         @relation(fields: [accountId], references: [id], onDelete: Cascade)
  categoryId     String?
  category       Category?       @relation(fields: [categoryId], references: [id])
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Category {
  id             String          @id @default(cuid())
  name           String
  type           CategoryType
  color          String?
  icon           String?
  userId         String
  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions   Transaction[]
  budgets        Budget[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Budget {
  id             String          @id @default(cuid())
  name           String
  amount         Decimal
  period         BudgetPeriod
  startDate      DateTime
  endDate        DateTime?
  userId         String
  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  categoryId     String
  category       Category        @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

enum AccountType {
  CHECKING
  SAVINGS
  CREDIT
  INVESTMENT
  CASH
}

enum TransactionType {
  INCOME
  EXPENSE
  TRANSFER
}

enum CategoryType {
  INCOME
  EXPENSE
}

enum BudgetPeriod {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
} 